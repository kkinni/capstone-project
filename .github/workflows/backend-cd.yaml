name: 'Backend Continuous Deployment'

# Run this workflows on pull requests against Main branch and enable manual trigger
on:
  push:
    paths:
      - starter/backend/**
    branches:
      - 'main'
  workflow_dispatch:

env:
  ECR_REPO: backend-repo

jobs:
  # Linting
  linting:
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Setup Python
      - name: Set up Python
        run: cd starter/backend && pip install pipenv

      # Clear cache using an Action
      - name: Clear cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ steps.setup-python.ouputs.python-version }}

      # Install dependencies
      - name: Install dependencies
        run: cd starter/backend && pipenv install --dev

      # Run linting
      - name: Run linting
        run: cd starter/backend && pipenv run lint

  # Testing
  testing:
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Setup Python
      - name: Set up Python
        run: cd starter/backend && pip install pipenv

      # Clear cache using an Action
      - name: Clear cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ steps.setup-python.ouputs.python-version }}

      # Install dependencies
      - name: Install dependencies
        run: cd starter/backend && pipenv install --dev

      # Run tests
      - name: Run tests
        run: cd starter/backend && pipenv run pytest

  # Building only if above 2 pass
  building:
    needs: [linting, testing]
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Setup Python
      - name: Set up Python
        run: cd starter/backend && pip install pipenv

      # Clear cache using an Action
      - name: Clear cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ steps.setup-python.ouputs.python-version }}

      # Install dependencies
      - name: Install dependencies
        run: cd starter/backend && pipenv install --dev

      # Run tests
      - name: Run tests
        run: cd starter/backend && pipenv run pytest     

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1

      # Log in to ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Tag and push image to ECR
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{env.ECR_REPO}}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG ./starter/backend
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      # Configure Kubernetes cluster

      # Select image from ECR

      # Deploy to cluster
      
    
    