name: 'Frontend Continuous Integration'

# Run this workflows on pull requests against Main branch and enable manual trigger
on:
  pull_request:
    paths:
      - starter/frontend/**
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  # Linting
  linting:
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Setup Node JS
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Clear cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}            

      # Install dependencies
      - name: Install dependencies
        run: cd starter/frontend && npm ci

      # Run linting
      - name: Run linting
        run: cd starter/frontend && npm run lint --fix # npx eslint --fix .

  # Testing
  testing:
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Setup Node JS and restore cache
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: ${{github.workspace}}/starter/frontend/package-lock.json

      # Install dependencies
      - name: Install dependencies
        run: cd starter/frontend && npm ci

      # Run tests
      - name: Run tests
        run: cd starter/frontend && npm run test

  # Building only if above 2 pass
  building:
    needs: [linting, testing]
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Setup Node JS and restore cache
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: ${{github.workspace}}/starter/frontend/package-lock.json
      
      # Install dependencies
      - name: Install dependencies
        run: cd starter/frontend && npm ci

      # Run tests
      - name: Run tests
        run: cd starter/frontend && npm run test

      # Run build
      - name: Build image
        run: docker build starter/frontend
      
    
    